version: '3.9'

services:
  postgres:
    image: postgres:16-alpine
    container_name: swiftboard-postgres-prod
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-swiftboard}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-postgres}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - swiftboard-network-prod
    security_opt:
      - no-new-privileges:true

  redis:
    image: redis:7-alpine
    container_name: swiftboard-redis-prod
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-changeme} --appendonly yes
    volumes:
      - redis_data_prod:/data
    healthcheck:
      test: ['CMD', 'redis-cli', '--raw', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - swiftboard-network-prod
    security_opt:
      - no-new-privileges:true

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: swiftboard-backend-prod
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.prod
    expose:
      - '8000'
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8000/health',
        ]
      interval: 20s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - swiftboard-network-prod
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

networks:
  swiftboard-network-prod:
    driver: bridge
    name: swiftboard-network-prod
    ipam:
      driver: default
      config:
        - subnet: 172.29.0.0/16

volumes:
  postgres_data_prod:
    name: swiftboard-postgres-data-prod
  redis_data_prod:
    name: swiftboard-redis-data-prod
